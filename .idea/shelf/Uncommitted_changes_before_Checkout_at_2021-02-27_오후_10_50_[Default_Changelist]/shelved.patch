Index: app/src/main/java/com/nikealarm/nikedrawalarm/ui/dialog/UpdateDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nikealarm.nikedrawalarm.ui.dialog\r\n\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Bundle\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.fragment.app.DialogFragment\r\nimport com.nikealarm.nikedrawalarm.R\r\nimport com.nikealarm.nikedrawalarm.databinding.DialogNotificationBinding\r\n\r\nclass UpdateDialog : DialogFragment() {\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater,\r\n        container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        dialog?.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n        return inflater.inflate(R.layout.dialog_notification, container, false)\r\n    }\r\n\r\n    // 시작\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        initView(view)\r\n    }\r\n\r\n    private fun initView(view: View) {\r\n        val binding = DialogNotificationBinding.bind(view)\r\n\r\n        binding.titleText.text = \"업데이트\"\r\n        with(binding.messageText) {\r\n            text =\r\n                \"- 버그 수정 및 코드 안정화\\n(자동응모 다시 설정해주세요!)\"\r\n            textSize = 18f\r\n            setPadding(12, 0, 12, 0)\r\n        }\r\n        binding.cancelBtn.visibility = View.GONE\r\n        binding.checkBtn.setOnClickListener {\r\n            dismiss()\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/nikealarm/nikedrawalarm/ui/dialog/UpdateDialog.kt	(revision 3469f9b676c1b9710ec2f577f9f4cb7664249b95)
+++ app/src/main/java/com/nikealarm/nikedrawalarm/ui/dialog/UpdateDialog.kt	(date 1614433671270)
@@ -32,6 +32,7 @@
         val binding = DialogNotificationBinding.bind(view)
 
         binding.titleText.text = "업데이트"
+        // TODO: 업데이트 내용 채워넣기
         with(binding.messageText) {
             text =
                 "- 버그 수정 및 코드 안정화\n(자동응모 다시 설정해주세요!)"
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#000000</color>\r\n    <color name=\"colorPrimaryDark\">#000000</color>\r\n    <color name=\"colorAccent\">#03DAC5</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 3469f9b676c1b9710ec2f577f9f4cb7664249b95)
+++ app/src/main/res/values/colors.xml	(date 1614433671318)
@@ -3,4 +3,5 @@
     <color name="colorPrimary">#000000</color>
     <color name="colorPrimaryDark">#000000</color>
     <color name="colorAccent">#03DAC5</color>
+    <color name="colorGray">#4A4A4A</color>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/nikealarm/nikedrawalarm/ui/fragment/ShoesListFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nikealarm.nikedrawalarm.ui.fragment\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport android.view.*\r\nimport android.widget.ImageView\r\nimport android.widget.Toast\r\nimport androidx.activity.OnBackPressedCallback\r\nimport androidx.appcompat.app.ActionBarDrawerToggle\r\nimport androidx.core.content.res.ResourcesCompat\r\nimport androidx.core.graphics.drawable.toBitmap\r\nimport androidx.core.view.GravityCompat\r\nimport androidx.core.view.doOnPreDraw\r\nimport androidx.fragment.app.Fragment\r\nimport androidx.fragment.app.viewModels\r\nimport androidx.navigation.fragment.FragmentNavigatorExtras\r\nimport androidx.navigation.fragment.findNavController\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.work.*\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.nikealarm.nikedrawalarm.adapter.ShoesListAdapter\r\nimport com.nikealarm.nikedrawalarm.R\r\nimport com.nikealarm.nikedrawalarm.database.ShoesDataModel\r\nimport com.nikealarm.nikedrawalarm.databinding.FragmentShoesListBinding\r\nimport com.nikealarm.nikedrawalarm.other.Contents\r\nimport com.nikealarm.nikedrawalarm.other.CustomTabsBuilder\r\nimport com.nikealarm.nikedrawalarm.ui.MainActivity\r\nimport com.nikealarm.nikedrawalarm.viewmodel.shoes.ShoesViewModel\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport kotlinx.coroutines.CoroutineScope\r\nimport kotlinx.coroutines.Dispatchers\r\nimport kotlinx.coroutines.delay\r\nimport kotlinx.coroutines.launch\r\n\r\n// TODO: 공유기능 추가\r\n@AndroidEntryPoint\r\nclass ShoesListFragment : Fragment(R.layout.fragment_shoes_list),\r\n    ShoesListAdapter.ItemClickListener,\r\n    NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    private var fragmentBinding: FragmentShoesListBinding? = null\r\n    private lateinit var shoesAdapter: ShoesListAdapter\r\n    private val mViewModel by viewModels<ShoesViewModel>()\r\n\r\n    private val FINISH_INTERVAL_TIME = 2000L\r\n    private var backPressedTime = 0L\r\n    private lateinit var backToast: Toast\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        activity?.onBackPressedDispatcher?.addCallback(backPressedCallback)\r\n    }\r\n\r\n    // 시작\r\n    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\r\n        super.onViewCreated(view, savedInstanceState)\r\n\r\n        // 인스턴스 설정\r\n        shoesAdapter = ShoesListAdapter().apply {\r\n            setOnItemClickListener(this@ShoesListFragment)\r\n        }\r\n\r\n        initView(view) // 뷰 초기화\r\n        setObserver() // 옵저버 설정\r\n\r\n        checkUpdate() // 업데이트 확인\r\n    }\r\n\r\n    override fun onClickItem(pos: Int) {\r\n        val builder = CustomTabsBuilder().getBuilder()\r\n        val newUrl = shoesAdapter.currentList?.get(pos)\r\n            ?.shoesUrl!!\r\n\r\n        try {\r\n            with(builder) {\r\n                ResourcesCompat.getDrawable(resources, R.drawable.ic_back, null)?.toBitmap()\r\n                    ?.let { bitmap ->\r\n                        setCloseButtonIcon(bitmap)\r\n                    }\r\n\r\n                build().launchUrl(requireContext(), Uri.parse(newUrl))\r\n            }\r\n        } catch (e: Exception) {\r\n            Toast.makeText(requireContext(), \"크롬 브라우저가 존재하지 않습니다.\", Toast.LENGTH_SHORT)\r\n                .show()\r\n        }\r\n    }\r\n\r\n    override fun onClickImage(pos: Int, imageView: ImageView) {\r\n        val shoesData = shoesAdapter.currentList?.get(pos)!!\r\n        val newUrl = shoesData.shoesUrl!!\r\n        val shoesImageUrl = shoesData.shoesImageUrl!!\r\n\r\n        try {\r\n            val directions = ShoesListFragmentDirections.actionDrawListFragmentToImageListFragment(\r\n                newUrl,\r\n                shoesImageUrl\r\n            )\r\n            val extras = FragmentNavigatorExtras(\r\n                imageView to newUrl\r\n            )\r\n            findNavController().navigate(\r\n                directions,\r\n                extras\r\n            )\r\n        } catch (e: IllegalStateException) {\r\n            e.printStackTrace()\r\n        }\r\n    }\r\n\r\n    // 공유하기\r\n    override fun onClickShare(pos: Int) {\r\n        val shoesData = shoesAdapter.currentList\r\n            ?.get(pos)!!\r\n        val uri = Uri.parse(shoesData.shoesImageUrl!!)\r\n\r\n        val intent = Intent(Intent.ACTION_SEND).apply {\r\n            type = \"image/jpeg\"\r\n            putExtra(Intent.EXTRA_STREAM, uri)\r\n            putExtra(Intent.EXTRA_TEXT, shoesData.shoesUrl!!)\r\n        }\r\n\r\n        if (intent.resolveActivity(requireContext().packageManager) != null) {\r\n            startActivity(intent)\r\n        }\r\n    }\r\n\r\n    override fun onNavigationItemSelected(menuItem: MenuItem): Boolean {\r\n        fragmentBinding?.drawer?.closeDrawer(GravityCompat.START)\r\n\r\n        return when (menuItem.itemId) {\r\n            R.id.mainMenu_draw -> {\r\n                setToolbarTitle(ShoesDataModel.CATEGORY_DRAW)\r\n                true\r\n            }\r\n            R.id.mainMenu_comingSoon -> {\r\n                setToolbarTitle(ShoesDataModel.CATEGORY_COMING_SOON)\r\n                true\r\n            }\r\n            R.id.mainMenu_released -> {\r\n                setToolbarTitle(ShoesDataModel.CATEGORY_RELEASED)\r\n                true\r\n            }\r\n            R.id.mainMenu_upcoming -> {\r\n                CoroutineScope(Dispatchers.IO).launch {\r\n                    try {\r\n                        delay(230)\r\n                        findNavController().navigate(R.id.action_drawListFragment_to_upcomingListFragment)\r\n                    } catch (e: IllegalStateException) {\r\n                        e.printStackTrace()\r\n                    }\r\n                }\r\n                true\r\n            }\r\n            R.id.mainMenu_setting -> {\r\n                CoroutineScope(Dispatchers.IO).launch {\r\n                    try {\r\n                        delay(230)\r\n                        findNavController().navigate(R.id.action_drawListFragment_to_settingFragment)\r\n                    } catch (e: IllegalStateException) {\r\n                        e.printStackTrace()\r\n                    }\r\n                }\r\n\r\n                true\r\n            }\r\n            else -> false\r\n        }\r\n    }\r\n\r\n    override fun onResume() {\r\n        super.onResume()\r\n        backPressedCallback.isEnabled = true\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        fragmentBinding = null\r\n        backPressedCallback.isEnabled = false\r\n        super.onDestroyView()\r\n    }\r\n\r\n    private fun initView(view: View) { // 뷰 설정\r\n        val binding = FragmentShoesListBinding.bind(view)\r\n        fragmentBinding = binding\r\n\r\n        // 툴바 설정\r\n        with(binding.mainToolbar) {\r\n            (activity as MainActivity).setSupportActionBar(this)\r\n        }\r\n\r\n        // 리스트 설정\r\n        with(binding.shoesList) {\r\n            setHasFixedSize(true)\r\n            layoutManager = LinearLayoutManager(context)\r\n            adapter = shoesAdapter\r\n\r\n            addOnScrollListener(object : RecyclerView.OnScrollListener() {\r\n                override fun onScrollStateChanged(recyclerView: RecyclerView, newState: Int) {\r\n                    super.onScrollStateChanged(recyclerView, newState)\r\n\r\n                    if (recyclerView.computeVerticalScrollOffset() == 0) {\r\n                        disappearButton()\r\n                    } else {\r\n                        appearButton()\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        // 스크롤 업 버튼\r\n        with(binding.scrollUpBtn) {\r\n            isEnabled = false\r\n\r\n            setOnClickListener {\r\n                binding.shoesList.smoothScrollToPosition(0)\r\n            }\r\n        }\r\n        // Navigation view\r\n        with(binding.navView) {\r\n            setCheckedItem(R.id.mainMenu_released)\r\n            setNavigationItemSelectedListener(this@ShoesListFragment)\r\n        }\r\n        // Drawer 설정\r\n        with(binding.drawer) {\r\n            val toggle = ActionBarDrawerToggle(\r\n                requireActivity(),\r\n                this,\r\n                binding.mainToolbar,\r\n                R.string.open_drawer,\r\n                R.string.close_drawer\r\n            )\r\n\r\n            addDrawerListener(toggle)\r\n            toggle.syncState()\r\n        }\r\n\r\n        postponeEnterTransition()\r\n        binding.shoesList.doOnPreDraw {\r\n            startPostponedEnterTransition()\r\n        }\r\n    }\r\n\r\n    private fun setObserver() { // 옵저버 설정\r\n        mViewModel.shoesCategory.observe(viewLifecycleOwner, {\r\n            fragmentBinding?.mainToolbar?.title = it\r\n\r\n            if (fragmentBinding?.scrollUpBtn!!.isEnabled) {\r\n                disappearButton()\r\n            }\r\n        })\r\n        mViewModel.shoesList.observe(viewLifecycleOwner, {\r\n            shoesAdapter.submitList(it)\r\n            if (it.size == 0) {\r\n                appearText()\r\n            } else {\r\n                if (fragmentBinding?.noItemText!!.isEnabled) {\r\n                    disappearText()\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    private fun setToolbarTitle(shoesCategory: String) {\r\n        mViewModel.shoesCategory.value = shoesCategory\r\n    }\r\n\r\n    private val backPressedCallback = object : OnBackPressedCallback(true) {\r\n\r\n        override fun handleOnBackPressed() {\r\n            if (fragmentBinding?.drawer!!.isDrawerOpen(GravityCompat.START)) {\r\n                fragmentBinding?.drawer?.closeDrawer(GravityCompat.START)\r\n            } else {\r\n                val tempTime = System.currentTimeMillis()\r\n                val intervalTime = tempTime - backPressedTime\r\n\r\n                if (0 <= intervalTime && FINISH_INTERVAL_TIME >= intervalTime) {\r\n                    requireActivity().finish()\r\n                    backToast.cancel()\r\n                } else {\r\n                    backPressedTime = tempTime\r\n                    backToast = Toast.makeText(\r\n                        requireContext(),\r\n                        \"뒤로 가기 버튼을 한 번 더 누르면 종료됩니다.\",\r\n                        Toast.LENGTH_SHORT\r\n                    ).apply {\r\n                        show()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun checkUpdate() {\r\n        if (mViewModel.isUpdated()) {\r\n            with(\r\n                requireContext().getSharedPreferences(\r\n                    Contents.PREFERENCE_NAME_AUTO_ENTER,\r\n                    Context.MODE_PRIVATE\r\n                ).edit()\r\n            ) {\r\n                clear()\r\n                commit()\r\n            }\r\n\r\n            findNavController().navigate(R.id.action_drawListFragment_to_updateDialog) // 다이얼로그 보여줌\r\n            mViewModel.afterUpdate()\r\n        }\r\n    }\r\n\r\n    // 애니메이션 설정\r\n    private fun appearText() {\r\n        with(fragmentBinding?.noItemText!!) {\r\n            isEnabled = true\r\n\r\n            animate().setDuration(350)\r\n                .alpha(1f)\r\n                .withLayer()\r\n        }\r\n    }\r\n\r\n    private fun disappearText() {\r\n        with(fragmentBinding?.noItemText!!) {\r\n            isEnabled = false\r\n\r\n            animate().setDuration(100)\r\n                .alpha(0f)\r\n                .withLayer()\r\n        }\r\n    }\r\n\r\n    private fun appearButton() {\r\n        with(fragmentBinding?.scrollUpBtn!!) {\r\n            isEnabled = true\r\n            animate().setDuration(100)\r\n                .alpha(1f)\r\n                .withLayer()\r\n        }\r\n    }\r\n\r\n    private fun disappearButton() {\r\n        with(fragmentBinding?.scrollUpBtn!!) {\r\n            isEnabled = false\r\n            animate().setDuration(100)\r\n                .alpha(0f)\r\n                .withLayer()\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/nikealarm/nikedrawalarm/ui/fragment/ShoesListFragment.kt	(revision 3469f9b676c1b9710ec2f577f9f4cb7664249b95)
+++ app/src/main/java/com/nikealarm/nikedrawalarm/ui/fragment/ShoesListFragment.kt	(date 1614433671273)
@@ -115,11 +115,9 @@
     override fun onClickShare(pos: Int) {
         val shoesData = shoesAdapter.currentList
             ?.get(pos)!!
-        val uri = Uri.parse(shoesData.shoesImageUrl!!)
 
         val intent = Intent(Intent.ACTION_SEND).apply {
-            type = "image/jpeg"
-            putExtra(Intent.EXTRA_STREAM, uri)
+            type = "text/plain"
             putExtra(Intent.EXTRA_TEXT, shoesData.shoesUrl!!)
         }
 
@@ -132,19 +130,19 @@
         fragmentBinding?.drawer?.closeDrawer(GravityCompat.START)
 
         return when (menuItem.itemId) {
-            R.id.mainMenu_draw -> {
+            R.id.mainMenu_draw -> { // DRAW
                 setToolbarTitle(ShoesDataModel.CATEGORY_DRAW)
                 true
             }
-            R.id.mainMenu_comingSoon -> {
+            R.id.mainMenu_comingSoon -> { // COMING SOON
                 setToolbarTitle(ShoesDataModel.CATEGORY_COMING_SOON)
                 true
             }
-            R.id.mainMenu_released -> {
+            R.id.mainMenu_released -> { // RELEASED
                 setToolbarTitle(ShoesDataModel.CATEGORY_RELEASED)
                 true
             }
-            R.id.mainMenu_upcoming -> {
+            R.id.mainMenu_upcoming -> { // UPCOMING
                 CoroutineScope(Dispatchers.IO).launch {
                     try {
                         delay(230)
@@ -155,7 +153,18 @@
                 }
                 true
             }
-            R.id.mainMenu_setting -> {
+            R.id.mainMenu_helper -> { // HELPER
+                CoroutineScope(Dispatchers.IO).launch {
+                    try {
+                        delay(230)
+                        findNavController().navigate(R.id.action_drawListFragment_to_helpFragment)
+                    } catch (e: IllegalStateException) {
+                        e.printStackTrace()
+                    }
+                }
+                true
+            }
+            R.id.mainMenu_setting -> { // SETTING
                 CoroutineScope(Dispatchers.IO).launch {
                     try {
                         delay(230)
@@ -164,7 +173,6 @@
                         e.printStackTrace()
                     }
                 }
-
                 true
             }
             else -> false
Index: app/src/main/java/com/nikealarm/nikedrawalarm/adapter/holder/ExplainImageViewHolder.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/nikealarm/nikedrawalarm/adapter/holder/ExplainImageViewHolder.kt	(date 1614433671266)
+++ app/src/main/java/com/nikealarm/nikedrawalarm/adapter/holder/ExplainImageViewHolder.kt	(date 1614433671266)
@@ -0,0 +1,16 @@
+package com.nikealarm.nikedrawalarm.adapter.holder
+
+import androidx.recyclerview.widget.RecyclerView
+import com.bumptech.glide.Glide
+import com.nikealarm.nikedrawalarm.databinding.ItemExplainImageBinding
+
+class ExplainImageViewHolder(private val binding: ItemExplainImageBinding) :
+    RecyclerView.ViewHolder(binding.root) {
+
+    fun bindView(imageRes: Int) {
+
+        Glide.with(itemView.context)
+            .load(imageRes)
+            .into(binding.itemImage)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/nikealarm/nikedrawalarm/adapter/holder/ShoesItemViewHolder.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nikealarm.nikedrawalarm.adapter.holder\r\n\r\nimport android.graphics.Color\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.bumptech.glide.Glide\r\nimport com.nikealarm.nikedrawalarm.adapter.ShoesListAdapter\r\nimport com.nikealarm.nikedrawalarm.database.ShoesDataModel\r\nimport com.nikealarm.nikedrawalarm.databinding.ItemShoesListBinding\r\n\r\nclass ShoesItemViewHolder(private val binding: ItemShoesListBinding, clickListener: ShoesListAdapter.ItemClickListener) :\r\n    RecyclerView.ViewHolder(binding.root) {\r\n\r\n    init {\r\n        binding.shoesImage.setOnClickListener {\r\n            clickListener.onClickImage(\r\n                adapterPosition,\r\n                binding.shoesImage\r\n            )\r\n        }\r\n\r\n        binding.learnMoreText.setOnClickListener {\r\n            clickListener.onClickItem(adapterPosition)\r\n        }\r\n//        binding.shareText.setOnClickListener {\r\n//            clickListener.onClickShare(adapterPosition)\r\n//        }\r\n    }\r\n\r\n    fun bindView(data: ShoesDataModel?) {\r\n        with(binding.shoesImage) {\r\n            Glide.with(itemView).load(data?.shoesImageUrl).into(this)\r\n            transitionName = data?.shoesUrl\r\n        }\r\n        binding.shoesSubtitleText.text = data?.shoesSubTitle\r\n        binding.shoesTitleText.text = data?.shoesTitle\r\n        binding.shoesHowToEventText.text = data?.shoesPrice\r\n        if (data?.shoesPrice == ShoesDataModel.SHOES_SOLD_OUT) {\r\n            binding.shoesHowToEventText.setTextColor(Color.RED)\r\n        } else {\r\n            binding.shoesHowToEventText.setTextColor(Color.BLACK)\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/nikealarm/nikedrawalarm/adapter/holder/ShoesItemViewHolder.kt	(revision 3469f9b676c1b9710ec2f577f9f4cb7664249b95)
+++ app/src/main/java/com/nikealarm/nikedrawalarm/adapter/holder/ShoesItemViewHolder.kt	(date 1614433671268)
@@ -21,9 +21,9 @@
         binding.learnMoreText.setOnClickListener {
             clickListener.onClickItem(adapterPosition)
         }
-//        binding.shareText.setOnClickListener {
-//            clickListener.onClickShare(adapterPosition)
-//        }
+        binding.shareText.setOnClickListener {
+            clickListener.onClickShare(adapterPosition)
+        }
     }
 
     fun bindView(data: ShoesDataModel?) {
Index: app/src/main/res/layout/item_shoes_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_marginStart=\"10dp\"\r\n    android:layout_marginTop=\"5dp\"\r\n    android:layout_marginEnd=\"10dp\"\r\n    android:layout_marginBottom=\"5dp\"\r\n    app:cardCornerRadius=\"15dp\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <ImageView\r\n                android:id=\"@+id/shoes_image\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"220dp\"\r\n                android:layout_marginBottom=\"8dp\"\r\n                android:background=\"?attr/selectableItemBackgroundBorderless\"\r\n                android:scaleType=\"centerCrop\"\r\n                tools:src=\"@drawable/test\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/shoes_subtitle_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:gravity=\"center\"\r\n                android:textStyle=\"bold\"\r\n                tools:text=\"우먼스 에어 조던 4\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/shoes_title_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginBottom=\"15dp\"\r\n                android:gravity=\"center\"\r\n                android:textColor=\"#000000\"\r\n                android:textSize=\"20sp\"\r\n                android:textStyle=\"bold\"\r\n                tools:text=\"OPTI YELLOW\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/shoes_howToEvent_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:gravity=\"center\"\r\n                android:scrollbars=\"none\"\r\n                android:textColor=\"#000000\"\r\n                android:textStyle=\"bold\"\r\n                tools:text=\"응모 기간 07/25(토) 11:00 ~ 12:00 (1시간)\\n당첨자 발표 07/25(토) 13:00\r\n            \\n당첨자 구매 기간 07/25(토) 13:00 ~ 15:00 (2시간)\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/learn_more_text\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginTop=\"5dp\"\r\n                android:layout_marginBottom=\"10dp\"\r\n                android:background=\"?attr/selectableItemBackground\"\r\n                android:gravity=\"center\"\r\n                android:text=\"자세히 보기\"\r\n                android:textColor=\"@android:color/holo_blue_light\"\r\n                android:textSize=\"18sp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <!--            <TextView-->\r\n            <!--                android:id=\"@+id/share_text\"-->\r\n            <!--                android:layout_width=\"wrap_content\"-->\r\n            <!--                android:layout_height=\"wrap_content\"-->\r\n            <!--                android:layout_gravity=\"center\"-->\r\n            <!--                android:layout_marginTop=\"4dp\"-->\r\n            <!--                android:layout_marginBottom=\"10dp\"-->\r\n            <!--                android:background=\"?attr/selectableItemBackground\"-->\r\n            <!--                android:text=\"공유하기\"-->\r\n            <!--                android:textStyle=\"bold\" />-->\r\n        </LinearLayout>\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</androidx.cardview.widget.CardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_shoes_list.xml	(revision 3469f9b676c1b9710ec2f577f9f4cb7664249b95)
+++ app/src/main/res/layout/item_shoes_list.xml	(date 1614433671309)
@@ -71,7 +71,6 @@
                 android:layout_height="wrap_content"
                 android:layout_gravity="center"
                 android:layout_marginTop="5dp"
-                android:layout_marginBottom="10dp"
                 android:background="?attr/selectableItemBackground"
                 android:gravity="center"
                 android:text="자세히 보기"
@@ -79,16 +78,16 @@
                 android:textSize="18sp"
                 android:textStyle="bold" />
 
-            <!--            <TextView-->
-            <!--                android:id="@+id/share_text"-->
-            <!--                android:layout_width="wrap_content"-->
-            <!--                android:layout_height="wrap_content"-->
-            <!--                android:layout_gravity="center"-->
-            <!--                android:layout_marginTop="4dp"-->
-            <!--                android:layout_marginBottom="10dp"-->
-            <!--                android:background="?attr/selectableItemBackground"-->
-            <!--                android:text="공유하기"-->
-            <!--                android:textStyle="bold" />-->
+            <TextView
+                android:id="@+id/share_text"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:layout_marginTop="4dp"
+                android:layout_marginBottom="10dp"
+                android:background="?attr/selectableItemBackground"
+                android:text="공유하기"
+                android:textStyle="bold" />
         </LinearLayout>
     </androidx.constraintlayout.widget.ConstraintLayout>
 </androidx.cardview.widget.CardView>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_dvr.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_dvr.xml	(date 1614433671280)
+++ app/src/main/res/drawable/ic_dvr.xml	(date 1614433671280)
@@ -0,0 +1,10 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="@android:color/black"
+        android:pathData="M21,3L3,3c-1.1,0 -2,0.9 -2,2v12c0,1.1 0.9,2 2,2h5v2h8v-2h5c1.1,0 1.99,-0.9 1.99,-2L23,5c0,-1.1 -0.9,-2 -2,-2zM21,17L3,17L3,5h18v12zM19,8L8,8v2h11L19,8zM19,12L8,12v2h11v-2zM7,8L5,8v2h2L7,8zM7,12L5,12v2h2v-2z" />
+</vector>
Index: app/src/main/res/layout/custom_guide_button.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/custom_guide_button.xml	(date 1614433671303)
+++ app/src/main/res/layout/custom_guide_button.xml	(date 1614433671303)
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:gravity="center"
+    android:orientation="vertical">
+
+    <ImageView
+        android:id="@+id/guide_icon"
+        android:layout_width="100dp"
+        android:layout_height="100dp"
+        tools:src="@drawable/ic_baseline_notifications_active" />
+
+    <TextView
+        android:id="@+id/guide_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:textColor="@android:color/black"
+        android:textSize="20sp"
+        tools:text="상품 알림 설정하는법" />
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/nikealarm/nikedrawalarm/component/worker/ParsingWorker.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.nikealarm.nikedrawalarm.component.worker\r\n\r\nimport android.content.Context\r\nimport android.util.Log\r\nimport androidx.hilt.work.HiltWorker\r\nimport androidx.work.Worker\r\nimport androidx.work.WorkerParameters\r\nimport androidx.work.workDataOf\r\nimport com.nikealarm.nikedrawalarm.database.Dao\r\nimport com.nikealarm.nikedrawalarm.database.SpecialDataModel\r\nimport com.nikealarm.nikedrawalarm.database.ShoesDataModel\r\nimport com.nikealarm.nikedrawalarm.other.Contents\r\nimport dagger.assisted.Assisted\r\nimport dagger.assisted.AssistedInject\r\nimport org.jsoup.Jsoup\r\n\r\n@HiltWorker\r\nclass ParsingWorker @AssistedInject constructor(\r\n    @Assisted context: Context,\r\n    @Assisted workerParams: WorkerParameters,\r\n    private val mDao: Dao\r\n) : Worker(\r\n    context,\r\n    workerParams\r\n) {\r\n\r\n    private val allShoesList = mutableListOf<ShoesDataModel>()\r\n\r\n    override fun doWork(): Result {\r\n        parsingData() // 데이터를 파싱함\r\n        if (isStopped) { // cancel 됐을 때\r\n            return Result.failure()\r\n        }\r\n\r\n        syncData() // 데이터를 갱신함\r\n\r\n        Log.i(\"CheckSize\", \"${mDao.getAllShoesData().size}\")\r\n        Log.i(\"CheckDrawSize\", \"${mDao.getAllSpecialData().size}\")\r\n        return Result.success()\r\n    }\r\n\r\n    // 데이터 파싱\r\n    private fun parsingData() {\r\n        parseReleasedData()\r\n        parseSpecialData()\r\n    }\r\n\r\n    // 데이터 갱신\r\n    private fun syncData() {\r\n        checkShoesData()\r\n        checkSpecialData()\r\n    }\r\n\r\n    // FEED 파싱\r\n    private fun parseReleasedData() {\r\n        val url = \"https://www.nike.com/kr/launch/\"\r\n        val doc = Jsoup.connect(url) // nike SNKRS창을 읽어옴\r\n            .userAgent(\"19.0.1.84.52\")\r\n            .get()\r\n\r\n        val elementsData = doc.select(\"li.launch-list-item\") // 여러개의 신발\r\n        var progress = 0.0\r\n\r\n        for (elementData in elementsData) {\r\n            if (isStopped) { // cancel 됐을 때\r\n                return\r\n            }\r\n\r\n            val shoesInfo = elementData.select(\"div.cta-container\") // 신발 정보\r\n                .text()\r\n                .trim()\r\n\r\n            if (shoesInfo == \"Learn More\") {\r\n                progress += 2.5\r\n                setProgressAsync(workDataOf(Contents.WORKER_PARSING_DATA_OUTPUT_KEY to progress.toInt()))\r\n\r\n                continue\r\n            }\r\n\r\n            val shoesSubTitle = elementData.select(\"div.copy-container\")\r\n                .select(\"h3\")\r\n                .text()\r\n            val shoesTitle = elementData.select(\"div.copy-container\")\r\n                .select(\"h6\")\r\n                .text()\r\n            val innerUrl =\r\n                \"https://www.nike.com\" + elementData.select(\"a\").attr(\"href\") // 해당 신발의 링크창을 읽어옴\r\n\r\n            if (mDao.existsShoesData(innerUrl)) { // 해당 데이터가 이미 존재 시\r\n                val category = when (shoesInfo) {\r\n                    \"THE DRAW 진행예정\", \"THE DRAW 응모하기\" -> ShoesDataModel.CATEGORY_DRAW\r\n                    \"THE DRAW 응모 마감\", \"THE DRAW 당첨 결과 확인\", \"THE DRAW 종료\" -> ShoesDataModel.CATEGORY_DRAW_END\r\n                    \"Coming Soon\" -> ShoesDataModel.CATEGORY_COMING_SOON\r\n                    else -> ShoesDataModel.CATEGORY_RELEASED\r\n                }\r\n\r\n                updateData(\r\n                    ShoesDataModel(\r\n                        0,\r\n                        shoesSubTitle,\r\n                        shoesTitle,\r\n                        shoesInfo,\r\n                        null,\r\n                        innerUrl,\r\n                        category\r\n                    )\r\n                )\r\n            } else { // 존재하지 않을 시\r\n                val innerDoc = Jsoup.connect(innerUrl)\r\n                    .userAgent(\"19.0.1.84.52\")\r\n                    .get()\r\n\r\n                // 신발 정보를 가져옴\r\n                val shoesPrice = \"가격 : \" + innerDoc.select(\"div.headline-5\") // 신발 가격\r\n                    .text()\r\n\r\n                val shoesImageUrl = innerDoc.select(\"figure.snkrs-gallery-item\") // 신발 이미지\r\n                    .select(\"img\")\r\n                    .attr(\"src\")\r\n\r\n                val insertShoesData: ShoesDataModel\r\n                when (shoesInfo) {\r\n                    \"THE DRAW 진행예정\", \"THE DRAW 응모하기\" -> { // DRAW\r\n                        val innerElementData = innerDoc.select(\"div.draw-description-container\")\r\n                            .select(\"p\")\r\n\r\n                        var howToEvent = \"\" // 이벤트 참여방법\r\n                        for (j in 1..3) {\r\n                            howToEvent += innerElementData.eq(j)\r\n                                .text() + \"\\n\"\r\n                        }\r\n\r\n                        howToEvent += shoesPrice\r\n\r\n                        insertShoesData = ShoesDataModel(\r\n                            null,\r\n                            shoesSubTitle,\r\n                            shoesTitle,\r\n                            howToEvent,\r\n                            shoesImageUrl,\r\n                            innerUrl,\r\n                            ShoesDataModel.CATEGORY_DRAW\r\n                        )\r\n                    }\r\n                    \"THE DRAW 응모 마감\", \"THE DRAW 당첨 결과 확인\", \"THE DRAW 종료\" -> { // DRAW END\r\n                        insertShoesData = ShoesDataModel(\r\n                            null,\r\n                            shoesSubTitle,\r\n                            shoesTitle,\r\n                            \"DRAW가 종료 되었습니다.\",\r\n                            shoesImageUrl,\r\n                            innerUrl,\r\n                            ShoesDataModel.CATEGORY_DRAW_END\r\n                        )\r\n                    }\r\n                    \"Coming Soon\" -> { // COMING SOON\r\n                        val launchDate = \"${\r\n                            innerDoc.select(\"div.available-date-component\").text()\r\n                        }\\n${shoesPrice}\"\r\n\r\n                        insertShoesData = ShoesDataModel(\r\n                            null,\r\n                            shoesSubTitle,\r\n                            shoesTitle,\r\n                            launchDate,\r\n                            shoesImageUrl,\r\n                            innerUrl,\r\n                            ShoesDataModel.CATEGORY_COMING_SOON\r\n                        )\r\n                    }\r\n                    else -> { // RELEASED\r\n                        val stock: String = if (shoesInfo == ShoesDataModel.SHOES_SOLD_OUT) {\r\n                            shoesInfo\r\n                        } else {\r\n                            shoesPrice\r\n                        }\r\n                        insertShoesData = ShoesDataModel(\r\n                            null,\r\n                            shoesSubTitle,\r\n                            shoesTitle,\r\n                            stock,\r\n                            shoesImageUrl,\r\n                            innerUrl,\r\n                            ShoesDataModel.CATEGORY_RELEASED\r\n                        )\r\n                    }\r\n                }\r\n\r\n                insertData(insertShoesData)\r\n            }\r\n\r\n\r\n            progress += 2.5\r\n\r\n            setProgressAsync(workDataOf(Contents.WORKER_PARSING_DATA_OUTPUT_KEY to progress.toInt()))\r\n            allShoesList.add(ShoesDataModel(0, shoesSubTitle, shoesTitle, null, null, innerUrl))\r\n        }\r\n    }\r\n\r\n    // UPCOMING 파싱\r\n    private fun parseSpecialData() {\r\n        var index = 1\r\n        val url = \"https://www.nike.com/kr/launch/?type=upcoming&activeDate=date-filter:AFTER_DATE\"\r\n        val doc = Jsoup.connect(url) // nike SNKRS창을 읽어옴\r\n            .userAgent(\"19.0.1.84.52\")\r\n            .get()\r\n        val elementsData = doc.select(\"li.launch-list-item\")\r\n\r\n        for (elementData in elementsData) {\r\n            if (isStopped) { // cancel 됐을 때\r\n                return\r\n            }\r\n\r\n            if (index % 2 != 0) {\r\n                val category = elementData.select(\"div.cta-container\")\r\n                    .text()\r\n                    .trim()\r\n\r\n                val specialUrl = \"https://www.nike.com\" + elementData.select(\"a\").attr(\"href\")\r\n\r\n                if (checkCategory(category)\r\n                    || mDao.existsSpecialData(specialUrl)\r\n                ) { // 이미 데이터 존재하지 않고 special이 아니면 continue\r\n                    continue\r\n                }\r\n\r\n                val date = elementData.attr(\"data-active-date\")\r\n\r\n                val year = date.split(\"/\")[0]\r\n                val month = elementData.select(\"p.headline-4\")\r\n                    .text()\r\n                val day = String.format(\"%02d\", elementData.select(\"p.headline-1\").text().toInt())\r\n                val whenStartEvent = elementData.select(\"h3.headline-5\")\r\n                    .text()\r\n                val order = \"${year}${month.split(\"월\")[0]}${day}\".toInt()\r\n\r\n                val specialData =\r\n                    SpecialDataModel(null, specialUrl, year, month, day, whenStartEvent, order)\r\n                insertSpecialData(specialData)\r\n            }\r\n\r\n            index++\r\n        }\r\n    }\r\n\r\n    private fun checkCategory(category: String): Boolean {\r\n        return when (category) {\r\n            \"THE DRAW 진행예정\", \"Coming Soon\" -> {\r\n                false\r\n            }\r\n            else -> {\r\n                true\r\n            }\r\n        }\r\n    }\r\n\r\n    // 갱신 설정\r\n    // ShoesData 리스트를 갱신 함\r\n    private fun checkShoesData() {\r\n\r\n        if (allShoesList.size < mDao.getAllShoesData().size) {\r\n            for (shoesData in mDao.getAllShoesData()) {\r\n\r\n                if (!allShoesList.contains(shoesData)) {\r\n                    mDao.deleteShoesData(shoesData.shoesTitle, shoesData.shoesSubTitle)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // SpecialData 리스트를 갱신 함\r\n    private fun checkSpecialData() {\r\n        for (specialData in mDao.getAllSpecialData()) {\r\n\r\n            if (!allShoesList.contains(\r\n                    ShoesDataModel(\r\n                        0,\r\n                        \"\",\r\n                        \"\",\r\n                        null,\r\n                        null,\r\n                        specialData.specialUrl\r\n                    )\r\n                )\r\n            ) {\r\n                deleteSpecialData(specialData)\r\n            }\r\n        }\r\n    }\r\n    // 갱신 끝\r\n\r\n    // 데이터베이스 설정\r\n    private fun insertData(shoesData: ShoesDataModel) {\r\n        mDao.insertShoesData(shoesData)\r\n    }\r\n\r\n    private fun updateData(newShoesData: ShoesDataModel) {\r\n        val index = mDao.getAllShoesData()\r\n            .indexOf(ShoesDataModel(0, \"\", \"\", null, null, newShoesData.shoesUrl))\r\n        val ordinaryData = mDao.getAllShoesData()[index] // 기존의 있던 신발 데이터를 읽어옴\r\n\r\n        if (newShoesData.shoesCategory != ordinaryData.shoesCategory) { // 카테고리가 바뀌었을 때\r\n            if (ordinaryData.shoesCategory == ShoesDataModel.CATEGORY_COMING_SOON) { // COMING SOON -> RELEASED\r\n                val newShoesPrice = try {\r\n                    ordinaryData.shoesPrice?.split(\"\\n\")?.get(1) // 신발 가격\r\n                } catch (e: ArrayIndexOutOfBoundsException) {\r\n                    e.printStackTrace()\r\n                    \"가격 : \"\r\n                }\r\n\r\n                mDao.updateShoesCategory(\r\n                    newShoesPrice,\r\n                    newShoesData.shoesCategory,\r\n                    ordinaryData.shoesUrl!!\r\n                )\r\n\r\n                deleteSpecialData(SpecialDataModel(0, ordinaryData.shoesUrl))\r\n            } else if (ordinaryData.shoesCategory == ShoesDataModel.CATEGORY_DRAW) { // DRAW -> DRAW END\r\n                val newShoesPrice = \"DRAW가 종료 되었습니다.\"\r\n\r\n                mDao.updateShoesCategory(\r\n                    newShoesPrice,\r\n                    newShoesData.shoesCategory,\r\n                    ordinaryData.shoesUrl!!\r\n                )\r\n                mDao.deleteSpecialData(newShoesData.shoesUrl!!)\r\n            }\r\n        }\r\n\r\n        if (newShoesData.shoesCategory == ShoesDataModel.CATEGORY_RELEASED) { // 출시 된 상품의 재고가 바뀌었을 때\r\n            if (ordinaryData.shoesPrice != ShoesDataModel.SHOES_SOLD_OUT && newShoesData.shoesPrice == ShoesDataModel.SHOES_SOLD_OUT) { // 재고가 다 떨어졌을 경우\r\n                mDao.updateShoesCategory(\r\n                    ShoesDataModel.SHOES_SOLD_OUT,\r\n                    ShoesDataModel.CATEGORY_RELEASED,\r\n                    ordinaryData.shoesUrl!!\r\n                )\r\n            } else if (ordinaryData.shoesPrice == ShoesDataModel.SHOES_SOLD_OUT && newShoesData.shoesPrice != ShoesDataModel.SHOES_SOLD_OUT) { // 재고가 다시 생긴 경우\r\n                mDao.updateShoesCategory(\r\n                    \"가격 : ${newShoesData.shoesPrice}\",\r\n                    ShoesDataModel.CATEGORY_RELEASED,\r\n                    ordinaryData.shoesUrl!!\r\n                )\r\n            }\r\n        }\r\n\r\n        if (newShoesData.shoesUrl != ordinaryData.shoesUrl) { // URL이 바뀌었을 시\r\n            mDao.updateShoesUrl(\r\n                newShoesData.shoesUrl,\r\n                ordinaryData.shoesUrl\r\n            )\r\n\r\n            if (mDao.existsSpecialData(ordinaryData.shoesUrl!!)) { // Special이 존재 할 시\r\n                mDao.updateSpecialDataUrl(newShoesData.shoesUrl!!, ordinaryData.shoesUrl)\r\n            }\r\n        }\r\n    }\r\n\r\n    private fun insertSpecialData(specialData: SpecialDataModel) {\r\n        mDao.insertSpecialData(specialData)\r\n    }\r\n\r\n    private fun deleteSpecialData(delete: SpecialDataModel) {\r\n        mDao.deleteSpecialData(delete.specialUrl)\r\n    }\r\n    // 데이터베이스 설정 끝\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/nikealarm/nikedrawalarm/component/worker/ParsingWorker.kt	(revision 3469f9b676c1b9710ec2f577f9f4cb7664249b95)
+++ app/src/main/java/com/nikealarm/nikedrawalarm/component/worker/ParsingWorker.kt	(date 1614433671358)
@@ -14,6 +14,7 @@
 import dagger.assisted.AssistedInject
 import org.jsoup.Jsoup
 
+// TODO: 중복된 데이터 제거
 @HiltWorker
 class ParsingWorker @AssistedInject constructor(
     @Assisted context: Context,
Index: app/src/main/res/navigation/nav_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<navigation xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/nav_graph\"\r\n    app:startDestination=\"@id/loadingFragment\">\r\n\r\n    <action\r\n        android:id=\"@+id/action_global_drawListFragment\"\r\n        app:destination=\"@id/loadingFragment\"\r\n        app:launchSingleTop=\"true\" />\r\n\r\n    <fragment\r\n        android:id=\"@+id/drawListFragment\"\r\n        android:name=\"com.nikealarm.nikedrawalarm.ui.fragment.ShoesListFragment\"\r\n        android:label=\"fragment_draw_list\"\r\n        tools:layout=\"@layout/fragment_shoes_list\">\r\n        <action\r\n            android:id=\"@+id/action_drawListFragment_to_settingFragment\"\r\n            app:destination=\"@id/settingFragment\"\r\n            app:enterAnim=\"@animator/anim_enter\"\r\n            app:exitAnim=\"@animator/anim_exit\"\r\n            app:popEnterAnim=\"@animator/anim_pop_enter\"\r\n            app:popExitAnim=\"@animator/anim_pop_exit\" />\r\n        <action\r\n            android:id=\"@+id/action_drawListFragment_to_imageListFragment\"\r\n            app:destination=\"@id/imageListFragment\" />\r\n        <action\r\n            android:id=\"@+id/action_drawListFragment_to_upcomingListFragment\"\r\n            app:destination=\"@id/upcomingListFragment\"\r\n            app:enterAnim=\"@animator/anim_enter\"\r\n            app:exitAnim=\"@animator/anim_exit\"\r\n            app:popEnterAnim=\"@animator/anim_pop_enter\"\r\n            app:popExitAnim=\"@animator/anim_pop_exit\" />\r\n        <action\r\n            android:id=\"@+id/action_drawListFragment_to_updateDialog\"\r\n            app:destination=\"@id/updateDialog\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/settingFragment\"\r\n        android:name=\"com.nikealarm.nikedrawalarm.ui.fragment.SettingFragment\"\r\n        android:label=\"SettingFragment\"\r\n        tools:layout=\"@layout/fragment_setting\">\r\n        <action\r\n            android:id=\"@+id/action_settingFragment_to_editInfoDialog\"\r\n            app:destination=\"@id/editInfoDialog\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/imageListFragment\"\r\n        android:name=\"com.nikealarm.nikedrawalarm.ui.fragment.ImageListFragment\"\r\n        android:label=\"ImageListFragment\"\r\n        tools:layout=\"@layout/fragment_image_list\">\r\n        <argument\r\n            android:name=\"shoesUrl\"\r\n            android:defaultValue=\"https://www.nike.com/kr/launch/?type=feed\"\r\n            app:argType=\"string\" />\r\n        <argument\r\n            android:name=\"shoesImageUrl\"\r\n            app:argType=\"string\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/loadingFragment\"\r\n        android:name=\"com.nikealarm.nikedrawalarm.ui.fragment.LoadingFragment\"\r\n        android:label=\"LoadingFragment\"\r\n        tools:layout=\"@layout/fragment_loading\">\r\n        <action\r\n            android:id=\"@+id/action_loadingFragment_to_drawListFragment\"\r\n            app:destination=\"@id/drawListFragment\"\r\n            app:popUpTo=\"@id/loadingFragment\"\r\n            app:popUpToInclusive=\"true\" />\r\n    </fragment>\r\n    <fragment\r\n        android:id=\"@+id/upcomingListFragment\"\r\n        android:name=\"com.nikealarm.nikedrawalarm.ui.fragment.UpcomingListFragment\"\r\n        android:label=\"UpcomingListFragment\"\r\n        tools:layout=\"@layout/fragment_upcoming_list\"/>\r\n    <dialog\r\n        android:id=\"@+id/editInfoDialog\"\r\n        android:name=\"com.nikealarm.nikedrawalarm.ui.dialog.EditInfoDialog\"\r\n        android:label=\"EditInfoDialog\"\r\n        tools:layout=\"@layout/dialog_editinfo\" />\r\n    <dialog\r\n        android:id=\"@+id/terminationDialog\"\r\n        android:name=\"com.nikealarm.nikedrawalarm.ui.dialog.TerminationDialog\"\r\n        android:label=\"TerminationDialog\"\r\n        tools:layout=\"@layout/dialog_notification\" />\r\n    <dialog\r\n        android:id=\"@+id/updateDialog\"\r\n        android:name=\"com.nikealarm.nikedrawalarm.ui.dialog.UpdateDialog\"\r\n        android:label=\"UpdateDialog\"\r\n        tools:layout=\"@layout/dialog_notification\" />\r\n</navigation>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/navigation/nav_graph.xml	(revision 3469f9b676c1b9710ec2f577f9f4cb7664249b95)
+++ app/src/main/res/navigation/nav_graph.xml	(date 1614433671313)
@@ -35,6 +35,13 @@
         <action
             android:id="@+id/action_drawListFragment_to_updateDialog"
             app:destination="@id/updateDialog" />
+        <action
+            android:id="@+id/action_drawListFragment_to_helpFragment"
+            app:destination="@id/helpFragment"
+            app:enterAnim="@animator/anim_enter"
+            app:exitAnim="@animator/anim_exit"
+            app:popEnterAnim="@animator/anim_pop_enter"
+            app:popExitAnim="@animator/anim_pop_exit" />
     </fragment>
     <fragment
         android:id="@+id/settingFragment"
@@ -73,7 +80,7 @@
         android:id="@+id/upcomingListFragment"
         android:name="com.nikealarm.nikedrawalarm.ui.fragment.UpcomingListFragment"
         android:label="UpcomingListFragment"
-        tools:layout="@layout/fragment_upcoming_list"/>
+        tools:layout="@layout/fragment_upcoming_list" />
     <dialog
         android:id="@+id/editInfoDialog"
         android:name="com.nikealarm.nikedrawalarm.ui.dialog.EditInfoDialog"
@@ -89,4 +96,9 @@
         android:name="com.nikealarm.nikedrawalarm.ui.dialog.UpdateDialog"
         android:label="UpdateDialog"
         tools:layout="@layout/dialog_notification" />
+    <fragment
+        android:id="@+id/helpFragment"
+        android:name="com.nikealarm.nikedrawalarm.ui.fragment.HelpFragment"
+        android:label="HelpFragment"
+        tools:layout="@layout/fragment_help" />
 </navigation>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_block.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_block.xml	(date 1614433671277)
+++ app/src/main/res/drawable/ic_block.xml	(date 1614433671277)
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+    <path
+        android:fillColor="@android:color/black"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM4,12c0,-4.42 3.58,-8 8,-8 1.85,0 3.55,0.63 4.9,1.69L5.69,16.9C4.63,15.55 4,13.85 4,12zM12,20c-1.85,0 -3.55,-0.63 -4.9,-1.69L18.31,7.1C19.37,8.45 20,10.15 20,12c0,4.42 -3.58,8 -8,8z" />
+</vector>
Index: app/src/main/res/layout/item_explain_image.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_explain_image.xml	(date 1614433671306)
+++ app/src/main/res/layout/item_explain_image.xml	(date 1614433671306)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:id="@+id/item_image"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scaleType="centerInside"
+        tools:src="@drawable/set_alarm1" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_help_outline.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_help_outline.xml	(date 1614433671281)
+++ app/src/main/res/drawable/ic_help_outline.xml	(date 1614433671281)
@@ -0,0 +1,5 @@
+<vector android:autoMirrored="true" android:height="24dp"
+    android:tint="#FFFFFF" android:viewportHeight="24"
+    android:viewportWidth="24" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M11,18h2v-2h-2v2zM12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM12,20c-4.41,0 -8,-3.59 -8,-8s3.59,-8 8,-8 8,3.59 8,8 -3.59,8 -8,8zM12,6c-2.21,0 -4,1.79 -4,4h2c0,-1.1 0.9,-2 2,-2s2,0.9 2,2c0,2 -3,1.75 -3,5h2c0,-2.25 3,-2.5 3,-5 0,-2.21 -1.79,-4 -4,-4z"/>
+</vector>
Index: app/src/main/res/layout/fragment_help.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_help.xml	(date 1614433671305)
+++ app/src/main/res/layout/fragment_help.xml	(date 1614433671305)
@@ -0,0 +1,239 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <androidx.appcompat.widget.Toolbar
+        android:id="@+id/main_toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="?attr/actionBarSize"
+        android:background="@color/colorPrimary"
+        android:elevation="4dp"
+        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:popupTheme="@style/ThemeOverlay.AppCompat.Light"
+        app:title="도움말" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/main_layout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginTop="?attr/actionBarSize"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/main_toolbar">
+
+        <androidx.cardview.widget.CardView
+            android:layout_width="0dp"
+            android:layout_height="0dp"
+            android:layout_margin="8dp"
+            android:elevation="2dp"
+            app:cardCornerRadius="12dp"
+            app:layout_constraintBottom_toTopOf="@id/guideline_horizontal"
+            app:layout_constraintEnd_toStartOf="@id/guideline_vertical"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent">
+
+            <LinearLayout
+                android:id="@+id/set_alarm_layout"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="?attr/selectableItemBackground"
+                android:gravity="center"
+                android:orientation="vertical">
+
+                <ImageView
+                    android:layout_width="80dp"
+                    android:layout_height="80dp"
+                    android:src="@drawable/ic_baseline_notifications_active" />
+
+                <TextView
+                    android:id="@+id/set_alarm_text"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="12dp"
+                    android:text="상품 알림 설정방법"
+                    android:textColor="@android:color/black"
+                    android:textSize="16sp" />
+            </LinearLayout>
+        </androidx.cardview.widget.CardView>
+
+        <androidx.cardview.widget.CardView
+            android:layout_width="0dp"
+            android:layout_height="0dp"
+            android:layout_margin="8dp"
+            android:layout_marginTop="?attr/actionBarSize"
+            android:elevation="2dp"
+            app:cardCornerRadius="12dp"
+            app:layout_constraintBottom_toTopOf="@id/guideline_horizontal"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toEndOf="@id/guideline_vertical"
+            app:layout_constraintTop_toTopOf="parent">
+
+            <LinearLayout
+                android:id="@+id/get_draw_info_layout"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="?attr/selectableItemBackground"
+                android:gravity="center"
+                android:orientation="vertical">
+
+                <ImageView
+                    android:layout_width="80dp"
+                    android:layout_height="80dp"
+                    android:src="@drawable/ic_releases"
+                    app:tint="@android:color/black" />
+
+                <TextView
+                    android:id="@+id/get_draw_info_text"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="12dp"
+                    android:text="DRAW 정보 받는방법"
+                    android:textColor="@android:color/black"
+                    android:textSize="16sp" />
+            </LinearLayout>
+        </androidx.cardview.widget.CardView>
+
+        <androidx.cardview.widget.CardView
+            android:layout_width="0dp"
+            android:layout_height="0dp"
+            android:layout_margin="8dp"
+            android:elevation="2dp"
+            app:cardCornerRadius="12dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toStartOf="@id/guideline_vertical"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/guideline_horizontal">
+
+            <LinearLayout
+                android:id="@+id/use_auto_layout"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="?attr/selectableItemBackground"
+                android:gravity="center"
+                android:orientation="vertical">
+
+                <ImageView
+                    android:layout_width="80dp"
+                    android:layout_height="80dp"
+                    android:src="@drawable/ic_dvr" />
+
+                <TextView
+                    android:id="@+id/use_auto_text"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="12dp"
+                    android:text="자동응모 사용방법"
+                    android:textColor="@android:color/black"
+                    android:textSize="16sp" />
+            </LinearLayout>
+        </androidx.cardview.widget.CardView>
+
+        <androidx.cardview.widget.CardView
+            android:layout_width="0dp"
+            android:layout_height="0dp"
+            android:layout_margin="8dp"
+            android:elevation="2dp"
+            app:cardCornerRadius="12dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toEndOf="@id/guideline_vertical"
+            app:layout_constraintTop_toBottomOf="@id/guideline_horizontal">
+
+            <LinearLayout
+                android:id="@+id/no_launch_app_layout"
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="?attr/selectableItemBackground"
+                android:gravity="center"
+                android:orientation="vertical">
+
+                <ImageView
+                    android:layout_width="80dp"
+                    android:layout_height="80dp"
+                    android:src="@drawable/ic_block" />
+
+                <TextView
+                    android:id="@+id/no_launch_app_text"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_marginTop="12dp"
+                    android:text="앱 실행이 안될 때"
+                    android:textColor="@android:color/black"
+                    android:textSize="16sp" />
+            </LinearLayout>
+        </androidx.cardview.widget.CardView>
+
+        <androidx.constraintlayout.widget.Guideline
+            android:id="@+id/guideline_horizontal"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            app:layout_constraintGuide_percent="0.5" />
+
+        <androidx.constraintlayout.widget.Guideline
+            android:id="@+id/guideline_vertical"
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:orientation="vertical"
+            app:layout_constraintGuide_percent="0.5" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/explain_layout"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_marginTop="?attr/actionBarSize"
+        android:padding="12dp"
+        android:visibility="gone"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@id/main_toolbar">
+
+        <TextView
+            android:id="@+id/title_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:textColor="@android:color/black"
+            android:textSize="20sp"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            tools:text="상품 알림 설정방법" />
+
+        <TextView
+            android:id="@+id/explain_text"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="12dp"
+            android:textColor="@color/colorGray"
+            android:textSize="16sp"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/title_text"
+            tools:text="1. UPCOMING을 누릅니다.\n2. 상품을 오른쪽으로 스와이프 합니다.\n3. 종 모양 아이콘을 눌러 알람을 설정/해제를 합니다." />
+
+        <androidx.viewpager2.widget.ViewPager2
+            android:id="@+id/explain_pager"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_marginTop="12dp"
+            app:layout_constraintBottom_toBottomOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toBottomOf="@id/guideline_center" />
+
+        <androidx.constraintlayout.widget.Guideline
+            android:id="@+id/guideline_center"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            app:layout_constraintGuide_percent="0.35" />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/nikealarm/nikedrawalarm/ui/fragment/HelpFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/nikealarm/nikedrawalarm/ui/fragment/HelpFragment.kt	(date 1614433671271)
+++ app/src/main/java/com/nikealarm/nikedrawalarm/ui/fragment/HelpFragment.kt	(date 1614433671271)
@@ -0,0 +1,144 @@
+package com.nikealarm.nikedrawalarm.ui.fragment
+
+import android.os.Bundle
+import android.view.MenuItem
+import android.view.View
+import androidx.activity.OnBackPressedCallback
+import androidx.fragment.app.Fragment
+import androidx.navigation.fragment.findNavController
+import androidx.viewpager2.widget.CompositePageTransformer
+import androidx.viewpager2.widget.MarginPageTransformer
+import androidx.viewpager2.widget.ViewPager2
+import com.nikealarm.nikedrawalarm.R
+import com.nikealarm.nikedrawalarm.adapter.ExplainImagePagerAdapter
+import com.nikealarm.nikedrawalarm.databinding.FragmentHelpBinding
+import com.nikealarm.nikedrawalarm.ui.MainActivity
+import kotlin.math.abs
+
+// TODO: 수정하기
+class HelpFragment : Fragment(R.layout.fragment_help) {
+    private var fragmentBinding: FragmentHelpBinding? = null
+    private var pagerAdapter: ExplainImagePagerAdapter? = null
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        activity?.onBackPressedDispatcher?.addCallback(backPressedCallback)
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        setHasOptionsMenu(true)
+
+        initView(view)
+    }
+
+    override fun onDestroyView() {
+        backPressedCallback.isEnabled = false
+        fragmentBinding = null
+        super.onDestroyView()
+    }
+
+    override fun onOptionsItemSelected(item: MenuItem): Boolean {
+        return when (item.itemId) {
+            android.R.id.home -> {
+                findNavController().navigateUp()
+                true
+            }
+            else -> false
+        }
+    }
+
+    private fun initView(view: View) {
+        val binding = FragmentHelpBinding.bind(view)
+        fragmentBinding = binding
+
+        // 툴바
+        with(binding.mainToolbar) {
+            (activity as MainActivity).setSupportActionBar(this)
+            (activity as MainActivity).supportActionBar?.setDisplayHomeAsUpEnabled(true)
+        }
+
+        // 상품 알림
+        binding.setAlarmLayout.setOnClickListener {
+            val text =
+                "1. UPCOMING을 누릅니다.\n2. 상품을 오른쪽으로 스와이프 합니다.\n3. 종 모양 아이콘을 눌러 알람을 설정/해제를 합니다.\n4. 출시 당일 알림을 받으실 수 있습니다."
+            val imageList = listOf(
+                R.drawable.set_alarm1,
+                R.drawable.set_alarm2,
+                R.drawable.set_alarm3,
+                R.drawable.set_alarm4
+            )
+
+            setData(binding.setAlarmText.text.toString(), text, imageList)
+        }
+
+        // 드로우 정보
+        binding.getDrawInfoLayout.setOnClickListener {
+            val text =
+                "1. 설정을 누릅니다.\n2. DRAW 정보 받기를 활성화 합니다.\n3. 앱이 꺼져있는 상태에서도 새로운 DRAW 정보를 받으실 수 있습니다."
+//            setData(binding.getDrawInfoText.text.toString(), text)
+        }
+
+        // 자동응모
+        binding.useAutoLayout.setOnClickListener {
+            val text =
+                "1. 설정을 누릅니다.\n2. 자동응모 허용을 누른 후 자동응모에 이용할 정보를 입력합니다.\n3. 메인화면으로 돌아가 UPCOMING을 누릅니다.\n" +
+                        "4. 원하는 DRAW 상품을 알림설정을 합니다.\n5. 응모 당일 자동으로 응모가 되는것을 확인할 수 있습니다."
+//            setData(binding.useAutoText.text.toString(), text)
+        }
+
+        // 앱 실행 x
+        binding.noLaunchAppLayout.setOnClickListener {
+            val text = "1. 앱 아이콘을 꾹 눌러 앱 정보를 누릅니다.\n2. 저장공간을 누릅니다.\n3. 데이터 삭제를 누른 후 앱을 재실행 합니다."
+//            setData(binding.noLaunchAppText.text.toString(), text)
+        }
+    }
+
+    private fun setData(title: String, text: String, imageList: List<Int>) {
+        fragmentBinding!!.mainLayout.visibility = View.GONE
+        fragmentBinding!!.explainLayout.visibility = View.VISIBLE
+
+        fragmentBinding!!.titleText.text = title
+        fragmentBinding!!.explainText.text = text
+
+        with(fragmentBinding!!.explainPager) {
+            pagerAdapter = ExplainImagePagerAdapter(imageList)
+
+            clipToPadding = false
+            clipChildren = false
+            offscreenPageLimit = 1
+            getChildAt(0).overScrollMode = View.OVER_SCROLL_NEVER
+
+            val transformer = CompositePageTransformer()
+            transformer.addTransformer(MarginPageTransformer(4))
+            transformer.addTransformer(ViewPager2.PageTransformer { page, position ->
+                val v = 1 - abs(position)
+                page.scaleY = (0.8f + v * 0.2f)
+            })
+
+            setPageTransformer(transformer)
+            adapter = pagerAdapter
+        }
+
+        backPressedCallback.isEnabled = true
+    }
+
+    private fun resetData() {
+        pagerAdapter = null
+        fragmentBinding!!.explainPager.adapter = null
+
+        fragmentBinding!!.mainLayout.visibility = View.VISIBLE
+        fragmentBinding!!.explainLayout.visibility = View.GONE
+
+        fragmentBinding!!.titleText.text = ""
+        fragmentBinding!!.explainText.text = ""
+
+        backPressedCallback.isEnabled = false
+    }
+
+    private val backPressedCallback = object : OnBackPressedCallback(false) {
+        override fun handleOnBackPressed() {
+            resetData()
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/values/attrs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/attrs.xml	(date 1614433671315)
+++ app/src/main/res/values/attrs.xml	(date 1614433671315)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="GuideButton">
+        <attr name="guideIcon" format="reference|integer" />
+        <attr name="guideText" format="reference|string" />
+    </declare-styleable>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/nikealarm/nikedrawalarm/ui/view/GuideButton.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/nikealarm/nikedrawalarm/ui/view/GuideButton.kt	(date 1614433671274)
+++ app/src/main/java/com/nikealarm/nikedrawalarm/ui/view/GuideButton.kt	(date 1614433671274)
@@ -0,0 +1,4 @@
+package com.nikealarm.nikedrawalarm.ui.view
+
+class GuideButton {
+}
\ No newline at end of file
Index: app/src/main/java/com/nikealarm/nikedrawalarm/adapter/ExplainImagePagerAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/nikealarm/nikedrawalarm/adapter/ExplainImagePagerAdapter.kt	(date 1614433671265)
+++ app/src/main/java/com/nikealarm/nikedrawalarm/adapter/ExplainImagePagerAdapter.kt	(date 1614433671265)
@@ -0,0 +1,25 @@
+package com.nikealarm.nikedrawalarm.adapter
+
+import android.view.LayoutInflater
+import android.view.ViewGroup
+import androidx.recyclerview.widget.RecyclerView
+import com.nikealarm.nikedrawalarm.adapter.holder.ExplainImageViewHolder
+import com.nikealarm.nikedrawalarm.databinding.ItemExplainImageBinding
+
+class ExplainImagePagerAdapter(private val images: List<Int>) :
+    RecyclerView.Adapter<ExplainImageViewHolder>() {
+
+    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ExplainImageViewHolder {
+        val view =
+            ItemExplainImageBinding.inflate(LayoutInflater.from(parent.context), parent, false)
+        return ExplainImageViewHolder(view)
+    }
+
+    override fun onBindViewHolder(holder: ExplainImageViewHolder, position: Int) {
+        holder.bindView(images[position])
+    }
+
+    override fun getItemCount(): Int {
+        return images.size
+    }
+}
\ No newline at end of file
Index: app/src/main/res/menu/main_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <item android:title=\"카테고리\">\r\n        <menu>\r\n            <group android:checkableBehavior=\"single\">\r\n                <item\r\n                    android:id=\"@+id/mainMenu_released\"\r\n                    android:icon=\"@drawable/ic_releases\"\r\n                    android:title=\"RELEASED\" />\r\n\r\n                <item\r\n                    android:id=\"@+id/mainMenu_comingSoon\"\r\n                    android:icon=\"@drawable/ic_coming_soon\"\r\n                    android:title=\"COMING SOON\" />\r\n\r\n                <item\r\n                    android:id=\"@+id/mainMenu_draw\"\r\n                    android:icon=\"@drawable/ic_draw\"\r\n                    android:title=\"DRAW\" />\r\n            </group>\r\n        </menu>\r\n    </item>\r\n\r\n    <item android:title=\"기타\">\r\n        <menu>\r\n            <item\r\n                android:id=\"@+id/mainMenu_upcoming\"\r\n                android:icon=\"@drawable/ic_calendar\"\r\n                android:title=\"UPCOMING\" />\r\n\r\n            <item\r\n                android:id=\"@+id/mainMenu_setting\"\r\n                android:icon=\"@drawable/ic_baseline_settings\"\r\n                android:title=\"설정\" />\r\n        </menu>\r\n    </item>\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/main_menu.xml	(revision 3469f9b676c1b9710ec2f577f9f4cb7664249b95)
+++ app/src/main/res/menu/main_menu.xml	(date 1614433671311)
@@ -24,12 +24,21 @@
         </menu>
     </item>
 
-    <item android:title="기타">
+    <item android:title="알람">
         <menu>
             <item
                 android:id="@+id/mainMenu_upcoming"
                 android:icon="@drawable/ic_calendar"
                 android:title="UPCOMING" />
+        </menu>
+    </item>
+
+    <item android:title="기타">
+        <menu>
+            <item
+                android:id="@+id/mainMenu_helper"
+                android:icon="@drawable/ic_help_outline"
+                android:title="도움말" />
 
             <item
                 android:id="@+id/mainMenu_setting"
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-20__11_47__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-20__11_47__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__2_27__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__2_27__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-20__11_47__Default_Changelist_1.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-20__11_47__Default_Changelist_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__2_18__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__2_18__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2020-12-26__4_26__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2020-12-26__4_26__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2020-10-29__10_33__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2020-10-29__10_33__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__1_17__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__1_17__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2020-12-08__7_19__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2020-12-08__7_19__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2020-12-08__7_23__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2020-12-08__7_23__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__2_01__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__2_01__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__1_52__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-22__1_52__Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-21__12_48__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Checkout_at_2021-02-21__12_48__Default_Changelist_.xml
